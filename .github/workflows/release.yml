name: Build and Release Installer

on:
  push:
    branches:
      - main  # Runs when you push to the main branch

jobs:
  build:
    runs-on: windows-latest  # Use Windows for building the installer

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x  # Change to your app's .NET version

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build the Application
        run: dotnet build --configuration Release --no-restore

      - name: Publish the Application
        run: dotnet publish -c Release -o publish

      - name: Create Installer
        run: |
          echo "Creating installer..."
          # Replace this with your actual installer command
          # Example for Inno Setup:
          # iscc path/to/your/installer_script.iss

      - name: Auto Generate Tag  # ðŸ›  FIXED: Removed extra hyphen
        id: tag
        shell: pwsh
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # Use Personal Access Token
        run: |
          $timestamp = Get-Date -UFormat "%s"  # Get Unix timestamp
          $NEW_TAG = "v1.0.$timestamp"
          
          # Configure Git with GitHub Actions bot credentials
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Authenticate using Personal Access Token
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

          # Create and push the tag
          git tag $NEW_TAG
          git push origin $NEW_TAG

          # Save the tag to GitHub environment
          echo "NEW_TAG=$NEW_TAG" | Out-File -FilePath $env:GITHUB_ENV -Append
