name: Release LookawayApp

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4  # Updated to latest version
        with:
          dotnet-version: '9.0.202'  # Using exact version for consistency

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet publish -c Release -r win-x64 --self-contained true -o release/

      - name: Generate new version tag
        id: versioning
        shell: pwsh
        run: |
          git fetch --tags
          $LATEST_TAG = git describe --tags --abbrev=0 2>$null
          if (-not $LATEST_TAG) { $LATEST_TAG = "v0.0.0" }
          echo "LATEST_TAG=$LATEST_TAG" | Out-File -FilePath $env:GITHUB_ENV -Append
          
          $MAJOR, $MINOR, $PATCH = $LATEST_TAG -replace "v", "" -split "\."
          $NEW_TAG = "v$MAJOR.$MINOR.$($PATCH + 1)"
          echo "NEW_TAG=$NEW_TAG" | Out-File -FilePath $env:GITHUB_ENV -Append


      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # Updated to latest version
        with:
          name: LookawayApp
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4  # Updated to latest version
        with:
          name: LookawayApp
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use default GitHub token with correct permissions
