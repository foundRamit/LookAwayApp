name: Build and Release Installer

on:
  push:
    branches:
      - main  # Runs when you push to the main branch

jobs:
  build:
    runs-on: windows-latest  # Use Windows for building the installer

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x  # Change to your app's .NET version

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build the Application
        run: dotnet build --configuration Release --no-restore

      - name: Publish the Application
        run: dotnet publish -c Release -o publish

      - name: Create Installer with Inno Setup
        run: |
          # Download and install Inno Setup
          choco install innosetup -y
          
          # Create an Inno Setup script
          echo "[Setup]
          AppName=Lookaway App
          AppVersion={#MyAppVersion}
          DefaultDirName={pf}\LookawayApp
          OutputBaseFilename=LookawayAppInstaller
          OutputDir=installer

          [Files]
          Source: 'publish\*'; DestDir: '{app}'; Flags: recursesubdirs

          [Tasks]
          Name: 'desktopicon'; Description: '{cm:CreateDesktopIcon}'; GroupDescription: '{cm:AdditionalIcons}'

          [Icons]
          Name: '{group}\Lookaway App'; Filename: '{app}\LookawayApp.exe'
          Name: '{group}\{cm:UninstallProgram,Lookaway App}'; Filename: '{uninstallexe}'
          Name: '{commondesktop}\Lookaway App'; Filename: '{app}\LookawayApp.exe'; Tasks: desktopicon
          " > installer.iss

          # Set version in the script
          $timestamp = Get-Date -UFormat "%Y%m%d%H%M%S"
          $version = "1.0.$timestamp"
          (Get-Content installer.iss) | 
          ForEach-Object { $_ -replace '{#MyAppVersion}', $version } | 
          Set-Content installer.iss

          # Compile the installer
          iscc installer.iss

      - name: Create GitHub Release
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          # Prepare release tag
          $timestamp = Get-Date -UFormat "%Y%m%d%H%M%S"
          $releaseTag = "v1.0.$timestamp"
          
          # Create release using the GH_PAT secret
          gh auth login --with-token <<< "$env:GH_PAT"
          gh release create $releaseTag `
            installer\LookawayAppInstaller.exe `
            -t "Lookaway App Release $releaseTag" `
            -n "Automated release of Lookaway App
            
            ## Changelog
            - Automated build from main branch
            - Version generated on $(Get-Date)
            
            ### Installation
            Download the installer and run it to install Lookaway App."

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lookaway-app-installer
          path: installer\LookawayAppInstaller.exe
          retention-days: 5